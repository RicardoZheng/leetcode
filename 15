class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        int n = nums.size();
        sort(nums.begin(), nums.end());
        if(nums.empty() || n < 3) return res;
        for(int first = 0; first < n; first++) {
            if(first > 0 && nums[first] == nums[first - 1]) {
                continue;
            }
            int left = first + 1;
            int right = n - 1;

            while(left < right) {
                if(nums[first] + nums[left] + nums[right] == 0) {
                    res.push_back({nums[first], nums[left], nums[right]});
                    while(left < right && nums[left] == nums[left + 1]) {
                        left++;
                    }
                    while(left < right && nums[right] == nums[right - 1]){
                        right--;
                    }
                    left++;
                    right--;
                } else if(nums[first] + nums[left] + nums[right] < 0) {
                    left++;
                } else if(nums[first] + nums[left] + nums[right] > 0) {
                    right--;
                }
            }
        }
        return res;
    }
};
