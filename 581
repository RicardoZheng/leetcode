class Solution {
public:
    int findUnsortedSubarray(vector<int>& nums) {
        int n = nums.size();
        int left;
        int right;
        int minn = INT_MAX;
        int maxn = INT_MIN;
        for(int i = 1; i < n; i++) {
            if(nums[i] < nums[i - 1]) {
               minn = min(minn, nums[i]);
            }
        }
        for(int i = n-2; i >= 0; i--) {//注意区间，从后往前遍历要等于零
            if(nums[i] > nums[i + 1]) {
                maxn = max(maxn, nums[i]);
            }
        }
        for(int i = 0; i < n; i++ ) {
            if(nums[i] > minn) {
                left = i;
                break;
            }
        }
        for(int i = n - 1; i >= 0; i--) {
           if(nums[i] < maxn) {
               right = i;
               break;
            }
        }
        int res;
        if (right - left >= 0) return right - left + 1;
        else return 0;

    }
};
